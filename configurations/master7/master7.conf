{
  /* Разбирает параметры командной строки и запускает демон. Опций не имеет.*/
  "startup": {},

  /*****************************************************************/
  /* Читает и валидирует файл конфигурации.                        */
  /*****************************************************************/
  "config": {
    "enabled": true,
    /* Разрешить перечитывать конфигурацию по сигналу SIGHUP */
    "reload_sighup": true,
    /* Проверять на изменения конфигурацию и перечитывать ее. 0 - выкл.*/
    "reload_changed_ms": 0
    /* Примечание: Динамическое переконфигурирование работает крайне нестабильно, поэтому использовать в бою нельзя */
  },

  /*****************************************************************/
  /* Ядро WFC. Реализует алгоритмы инициализации и запуска системы */
  /*****************************************************************/
  "core": {
    /* Периодичность выполнения задач ядра (проверка на переинициализации при изменении конфигурации или флаг выхода)*/
    "core_timeout_ms": 1000,
    /* Запуск пользовательских задач в основном потоке демона */
    "idle_timeout_ms": 1000,
    /* Ограничение оперативной памяти */
    "rlimit_as_mb": 0,

    /*Настройка workflow ядра */
    "common-workflow": {
      /* Число рабочих потоков. 0 - в основном потоке демона */
      "threads": 2
      /* Примечание: workflow - это очередь задач и пул потоков, который ее разгребает.
       *             Также поддерживает таймеры и реквестеры. Каждый прикладной объект 
       *             имеет доступ к workflow, если он не указан, то используется этот
       *             workflow ядра. См. также раздел "workflow"
       */
    },
    /* список ядер cpu для потоков WFC (потоки workflow, серверов и клиентов, а также пользовательских зарегистрированных потоков) */
    "wfc-cpu": [0,1,2,3,4,5,6,7,8,9,10],
    /* список ядер cpu для всех остальных потоков */
    "sys-cpu": [11,12,13,14,15,16,17,19,20]
  },

    /*****************************************************************/
  /* Система логирования                                           */
  /*****************************************************************/
  "logger": {
    /* При отключении модуля логирования сообщения выводятся в clog без форматирования */
    "enabled": true,
    /* Приоритет запуска. Должен быть минимальным в конфигурации, чтобы логирование запускалось раньше всех */
    "startup_priority": -1000,
    /* Аналогично, останов логирования должен происходить в последнюю очередь */
    "shutdown_priority": 1000,
    /* Отображать миллисекунды в логах */
    "resolution":"milliseconds",
    /* Ограничение длинны лог-файла в байтах */
    "size_limit": 10000000,
    /* Путь для файла(ов) логов */
    "path": "/logs/prefixdb-master7.log",
    "customize": [
      {
        /* Карта кастомных настроек для каждого лога, например можно лог stat писать в отдельный файл */
        "names": ["stat"],
        "path": "/logs/prefixdb-master7-stat.log",
        "resolution":"milliseconds"
      }
    ]
  },

  /*****************************************************************/
  /* Рабочие процессы                                              */
  /*****************************************************************/
  "workflow": [
    {                                                                                                         
      /* workflow для собственно компонента prefixdb. Используется в основном для отложенной записи */        
      "name": "prefixdb-workflow",                                                                            
      "enabled": true,                                                                                        
      /* запускаем пораньше, чтобы очередь не разбухала */                                                    
      "startup_priority": -900,                                                                               
      /* и раньше остальных завершаем, чтобы "сбросить" все задачи из очереди, выполнение которых будет тормозить процесс останова */                                                                                       
      "shutdown_priority": -900,                                                                              
                                                                                                              
      /* Максимальный размер очереди (для jsonrpc в штатном режиме 1-2, разрастание очереди свидетельствует о том, что сервер не справляется)                                                                               
       * При запуске возможен кратковременное разрастание когда одновременно приходит множество запросов */   
      "maxsize": 16,                                                                                     
      /* Размер очереди при котором происходить предупреждение в лог */                                       
      "wrnsize": 8,                                                                                          
      /* Периодичность записи предупреждения в лог (пока размер превосходит wrnsize) */                       
      "control_ms": 1000,                                                                                    
      /* Число рабочих потоков. 0 - в основном потоке демона */                                               
      "threads": 1,                                                                                           
      /* Обрабатывать задачи с задержкой. Например для 50 мс, означает что время ответа на запрос будет не менее 50мс.                                                           Можно открыть отдельный порт для кроновых скриптов и настроить очередь с задержкой, чтобы не сильно "валили" запросами */                                                                                          
      "post_delay_ms": 0,                                                                                     
      /* Ограничение по количеству обрабатываем задач ОДНИМ потоком. */                                       
      "rate_limit": 0,                                                                                        
      /* Список выделенных ядер CPU для потоков этого workflow. Если пуст, то настройки ядра  WFC */          
      "cpu": []                                                                                               
    },                                                                                                        

    {                                                                                                         
      /* workflow для основной jsonrpc очереди входящих запросов  */                                          
      "name": "jsonrpc-workflow",                                                                             
      "enabled": true,                                                                                        
      "startup_priority": -900,                                                                               
      "shutdown_priority": -900,                                                                              
      "maxsize": 1024,
      "wrnsize": 32,                                                                                          
      "control_ms": 1000,                                                                                    
      "threads": 8,                                                                                          
      "post_delay_ms": 0,                                                                                     
      "rate_limit": 0,                                                                                        
      "cpu": []                                                                                               
    },                                                                                                        

    {                                                                                                         
      /* workflow для основной jsonrpc очереди сериализации и отправки ответов на запросы  */                 
      "name": "jsonrpc-workflow-callback",                                                                    
      "enabled": true,                                                                                        
      "startup_priority": -900,                                                                               
      "shutdown_priority": -900,                                                                              
      "maxsize": 1024,                                                                                      
      "wrnsize": 32,                                                                                          
      "control_ms": 1000,                                                                                    

      "threads": 2,                                                                                           
      "post_delay_ms": 0,                                                                                     
      "rate_limit": 0,                                                                                        
      "cpu": []                                                                                               
    },                                                                                                        

    {                                                                                                         
      /* workflow для jsonrpc очереди входящих запросов от cron-скриптов и прочих клиентов которые могут давать                                                                                                             
         большую нагрузку, но не требовательны к времени ответа */                                            
      "name": "client-workflow",                                                                              
      "enabled": true,                                                                                        
      "startup_priority": -900,                                                                               
      "shutdown_priority": -900,                                                                              
      "maxsize": 1024,                                                                                      
      "wrnsize": 128,                                                                                        
      "control_ms": 1000,                                                                                    

      "threads": 1,                                                                                           
      "post_delay_ms": 0,                                                                                     
      "rate_limit": 0,                                                                                        
      "cpu": []                                                                                               
    },                                                                                                        

    {                                                                                                         
      /* workflow для jsonrpc очереди входящих запросов от слейвов */                                         
      "name": "slave-workflow",                                                                               
      "enabled": true,                                                                                        
      "startup_priority": -900,                                                                               
      "shutdown_priority": -900,                                                                              
      "maxsize": 100000,                                                                                      
      "wrnsize": 1000,                                                                                        
      "control_ms": 1000,                                                                                    

      "threads": 1,                                                                                           
      "post_delay_ms": 0,                                                                                     
      "rate_limit": 0,                                                                                        
      "cpu": []                                                                                               
    }                                                                                                         
  ],

  /*****************************************************************/
  /* TCP сервер                                                    */
  /*****************************************************************/
  "server-tcp": [
    {
      "name": "main-server",
      "enabled": true,
      "startup_priority": 1000,
      "shutdown_priority": -1000,
      "target": "server-queue",
      "threads": 4,
      "addr": "0.0.0.0",
      "port": "23000"
    },

    {                                                                                                         
      "name": "script-server",                                                                                
      "enabled": true,                                                                                        
      "startup_priority": 1000,                                                                               
      "shutdown_priority": -1000,                                                                             
      "target": "client-queue",                                                                               
      "threads": 1,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23001"
    },                                                                                                        

    {                                                                                                         
      "name": "slave-server",
      "enabled": true,                                                                                        
      "startup_priority": 1000,                                                                               
      "shutdown_priority": -1000,                                                                             
      "target": "slave-queue",                                                                                
      "threads": 1,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23002"
    },                                                                                                        

    {                                                                                                         
      "name": "raw-server",
      "enabled": true,                                                                                        
      "target": "prefixdb1",                                                                                   
      "threads": 0,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23003"                                                                                         
    },
    
    {
      "name": "main-server-old",
      "enabled": true,
      "startup_priority": 1000,
      "shutdown_priority": -1000,
      "target": "server-queue",
      "threads": 4,
      "addr": "0.0.0.0",
      "port": "23570"
    },

    {                                                                                                         
      "name": "script-server-old",                                                                                
      "enabled": true,                                                                                        
      "startup_priority": 1000,                                                                               
      "shutdown_priority": -1000,                                                                             
      "target": "client-queue",                                                                               
      "threads": 1,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23571"
    },                                                                                                        

    {                                                                                                         
      "name": "slave-server-old",
      "enabled": true,                                                                                        
      "startup_priority": 1000,                                                                               
      "shutdown_priority": -1000,                                                                             
      "target": "slave-queue",                                                                                
      "threads": 1,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23572"
    },                                                                                                        

    {                                                                                                         
      "name": "raw-server-old",
      "enabled": true,                                                                                        
      "target": "prefixdb1",                                                                                   
      "threads": 0,                                                                                           
      "addr": "0.0.0.0",                                                                                      
      "port": "23573"                                                                                         
    }
  ],

  /*****************************************************************/
  /* Очередь jsonrpc-запросов                                      */
  /*****************************************************************/
  "jsonrpc-queue": [
    /* Основная очередь  */                                                                                   
    {                                                                                                         
      "name": "server-queue",                                                                                
      "enabled": true,                                                                                        
      "suspend": false,                                                                                       
      /* Это workflow для входящей очереди */                                                                 
      "workflow": "jsonrpc-workflow",                                                                         
      /* И еще раз отправляем на сбор статистики  */                                                          
      "target": "prefixdb-service1",                                                                           
                                                                                                              
      /* Можно задать workflow для исходящей очереди. Имеет смысл только при тяжелых ответах на запрос        
         и/или ответ в прикладной области отправляется под мьютексом. В данном случае на время ответа не      
         повлияет но увеличит нагрузку на CPU  */                                                             
      "callback_queue": true,                                                                                 
      "callback_workflow": "jsonrpc-workflow-callback",
      "tracking":true
    },                                                                                                        
    /* Очередь для cron скриптов  */                                                                          
    {                                                                                                         
      "name": "client-queue",                                                                                 
      "enabled": true,                                                                                        
      "suspend": false,                                                                                       
      "workflow": "client-workflow",                                                                          
      "target": "prefixdb-service1",                                                                           
      "callback_queue": false,                                                                                
      "callback_workflow": "",
      "tracking":true
    },                                                                                                        
    /* Очередь для слейва */                                                                                  
    {                                                                                                         
      "name": "slave-queue",                                                                                  
      "enabled": true,                                                                                        
      "suspend": false,                                                                                       
      "workflow": "slave-workflow",                                                                           
      "target": "prefixdb-service1"                                                                            
    }                                                                                                         
  ],

  /*****************************************************************/
  /* Сервис PrefixDB                                               */
  /*****************************************************************/
  "prefixdb-service": [
    /* Десериализует параметры запроса и осуществляет вызов метода прикладного объекта*/
    {
      "name": "prefixdb-service1",
      "enabled": true,
      "suspend": false,

      /* Только для сбора статы. Достаточно общего workflow ядра WFC*/
      "workflow": "", 
      /* Прикладной объект*/
      "target": "prefixdb1",
      /*  Пропускать не JSON-RPC запросы. Может использоваться если в прикладном объекте реализован 
       *  метод iinterface::perfom_io для произвольных сообщений. Обычно для этого открывают другой 
       *  порт, но если сервер соединен непосредственно с сервисом, то можно по одному порту  */
      "allow_non_jsonrpc": true,
      /* В большинстве случаев не нужно отслеживать подключение/отключение клиентов, а также делать 
       * встречные вызовы (с сервера к клиенту), поэтому отключаем реестр вызовов (автоматически отключается 
       * очередь ожидания ответов на запросы)*/
      "disable_handler_map": true,

      /* Следующие опции работают только при "disable_handler_map": false */
      /* Максимальное время ожидания ответа на встречный запрос */
      "call_lifetime_ms": 60000,
      /* Осуществлять проверку очереди при каждом запросе */
      "remove_everytime": true,
      /* Периодичность удаления устаревших запросов из очереди ожидания */
      "remove_outdated_ms": 0
    }
  ],

  /*****************************************************************/
  /* prefixdb                                                      */
  /*****************************************************************/
  "prefixdb": [
    {
      "name": "prefixdb1",
      "enabled": true,
      /* В suspend режиме отправляет пустой ответ. Может быть использован для отладки производительности.
       * (Если есть существенная разница в suspend и не-suspend то основные ресурсы уходят на прикладную логику) */
      "suspend": false,
      /* Должен запускаться после клиента мастера, иначе может не подцепиться репликация */
      "startup_priority": 0,
      "shutdown_priority": 0,
      /* Для таймеров слева и очереди отложенной записи */
      "workflow": "prefixdb-workflow",
      /* Сканирует папку о открывает БД префиксов иначе только при первом запросе */
      "preopen": true,
      /* Ограничение на количество ключей в одном запросе */
      "keys_per_req": 100,
      /* Максимальная длина ключа в запросе */
      "key_size_limit": 256,
      /* Максимальный размер значения в запросе */
      "value_size_limit": 10240,
      "prefix_size_limit": 256,
      /* Максимальная длина префикса в запросе */
      "max_prefixes": 128,
      /* Путь к БД префиксов */
      "path": "/monamour/prefixdb/master7",
      /* WAL можно хранить в другом месте ( например SSD ) */
      "wal_path": "",
      /* Путь куда будут перемещаться БД префиксов при вызове detach_prefix */
      "detach_path": "/monamour/prefixdb/master7_detach",
      /* максимальный размер хранимых json-объектов (не реализовано) */
      "packed_limit": 1000,
      /* максимальный размер хранимых json-массивов (не реализовано) */
      "array_limit": 1000,
      /* ограничение на количество возвращаемых ключей для range за один запрос  */
      "range_limit": 10000,
      /* Отложенная запись через очередь. Уменьшается время ответа на модифицирующие запросы 
       * если не нужен результат и не задан параметр sync в запросе. Внимание! Если не задан 
       * sync в запросе, то фактическая запись в базу может быть произведена позже, чем клиент 
       * получит ответ об успешной операции. Если в этот момент демон останавливается, то 
       * все запросы в очереди теряются 
       */
      "enable_delayed_write": true,
      /* Автоматическое восстановление при старте на поврежденной базе */
      "auto_repair": false,
      /* Завершить работу при ошибке открытия БД*/
      "abort_if_open_error": true,
      /* Проверять json в операциях типа package */
      "check_incoming_merge_json": false,
      /* ini-конфиг для RocksDB */
      "ini": "./rocksdb.ini",
      /*"ini": "/usr/monamour/prefixdb/rocksdb.ini",*/

      /* Периодическое переуплотнение БД префиксов (может ускорить работу после удаления массива данных )*/
      "compact": {
        /* Запускать сразу после открытия(работает только с preopen=true и независимо от "enabled")*/
        "startup_compact": false,
        /* Вкл/выкл периодическое переуплотнение (не влияет на startup_compact) 
           Если не заданы start_time и period_s то раз в сутки с момента запуска
          */
        "enabled": true,
        /* Запускать в заданное время, например 03:00:00 */
        "start_time": "04:12:00",
        /* Если не задано, то раз в сутки. Если не ноль и start_time="" то с заданой периодичностью с 
           момента запуска или начиная со времени start_time */
        "period_s": 0
      },
      /* Устарело */
      "stop_list": []
    }
  ]
}
