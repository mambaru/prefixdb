{
  /* Разбирает параметры командной строки и запускает демон. Опций не имеет.*/
  "startup": {},

  /* Читает и валидирует файл конфигурации.*/
  "config": {
    "enabled": true,
    /* Разрешить перечитывать конфигурацию по сигналу SIGHUP */
    "reload_sighup": true,
    /* Проверять на изменения конфигурацию и перечитывать ее. 0 - выкл.*/
    "reload_changed_ms": 1000

    /* Примечание: Динамическое переконфигурирование работает крайне нестабильно, поэтому использовать в бою нельзя */
  },

  /* Ядро WFC. Реализует алгоритмы инициализации и запуска системы*/
  "core": {
    /* Периодичность выполнения задач ядра (проверка на переинициализации при изменении конфигурации или флаг выхода)*/
    "core_timeout_ms": 1000,
    /* Запуск пользовательских задачь в основном потоке демона */
    "idle_timeout_ms": 1000,
    /* Ограничение оперативной памяти */
    "rlimit_as_mb": 0,
    /* Зарезервировано (пока не работает)*/
    "enable_callback_check": true,

    /*Настройка workflow ядра */
    "core-workflow": {
      /* Число рабочих потоков. 0 - в основном потоке демона */
      "threads": 1,
      /* Использовать boost::io_service" */
      "use_io_service": true
      
      /* Примечание: workflow - это очередь задач и пул потоков, который ее разгребает.
       *             Также поддерживает таймеры и реквестеры. Каждый прикладной объект 
       *             имеет доступ к workflow, если он не указан, то используеться этот
       *             workflow ядра
       */
    },
    /* список ядер cpu для потоков WFC (потоки workflow, серверов и клиентов, а также пользовательских зарегестрированых потоков) */
    "cpu": [ ],
    /* список ядер cpu для всех остальных потоков */
    "unreg-cpu": [ ]
  },

  /* Система логирования */
  "logger": {
    /* При отключении модуля логирования сообщения выводяться в clog без форматирования */
    "enabled": true,
    /* Приоритет запуска. Должен быть минимальным в конфиграции, чтобы логгирование запускалос раньше всех */
    "startup_priority": -1000,
    /* Аналогично, останов логирования должен происходить в последнюю очередь */
    "shutdown_priority": 1000,
    /* Отображать миллисекунды в логах */
    "milliseconds": true,
    /* Ограничение длинны лог-файла в байтах */
    "limit": 10000000,
    /* Стандартный вывод в режиме не-демона: cerr, cout или clog */
    "stdout": "clog",
    /* Путь для файла(ов) логов. В сингл режиме просто добавляется ".log" */
    "path": "/logs/prefixdb-master1",
    /* Разрешить писать в syslog (имя) */
    "syslog": "",
    /* Список запрещенных логов или типов логов в нижнем регистре */
    "deny": [],
    /* Если false то каждый лог пишется в отдельный файл, например /logs/prefixdb-master1.domain.log */
    "single": true,
    "custom": {
    }
  },

  /**/
  "workflow": [

    /**/
    {
      "name": "prefixdb-workflow",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "main-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 100000,
      "wrnsize": 1000,
      "show_wrn_ms": 1000,

      "threads": 1,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "main-io-workflow",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "main-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 1200,
      "wrnsize": 10,
      "show_wrn_ms": 1000,

      "threads": 4,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "main-io-workflow-callback",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "main-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 100000,
      "wrnsize": 1000,
      "show_wrn_ms": 1000,
      "threads": 2,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "main-jsonrpc-workflow",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "main-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 1000,
      "wrnsize": 10,
      "show_wrn_ms": 1000,

      "threads": 8,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "main-jsonrpc-workflow-callback",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "main-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 100,
      "wrnsize": 10,
      "show_wrn_ms": 1000,

      "threads": 2,
      "use_io_service": false,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "script-jsonrpc-workflow",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "scripts-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 100000,
      "wrnsize": 1000,
      "show_wrn_ms": 1000,

      "threads": 1,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    },

    /**/
    {
      "name": "slave-jsonrpc-workflow",
      "enabled": true,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "statistics": {
        "disabled": false,
        "target": "slave-stat",
        "interval_ms": 100,
        "queue": ".queue",
        "dropped": ".dropped",
        "thread": ".thread"
      },
      "maxsize": 100000,
      "wrnsize": 1000,
      "show_wrn_ms": 1000,

      "threads": 1,
      "use_io_service": true,
      "post_delay_ms": 0,
      "rate_limit": 0,
      "cpu": []
    }
  ],

  /**/
  "statistics-aggregator": [
    {
      "name": "main-stat",
      "enabled": true,
      "suspend": false,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 1000,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:main:PrefixDB-Test~~",
          "service~~daemon:main:PrefixDB-Test~~ctest1~~",
          "script~~daemon:main:PrefixDB-Test-master1~~daemon:main:PrefixDB-Test~~"
        ]
      },
      "log":"",
      "timeout_ms": 2500,
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    },

    {
      "name": "rpc-stat",
      "enabled": true,
      "suspend": false,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 1000,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:rpc:PrefixDB-Test~~",
          "service~~daemon:rpc:PrefixDB-Test~~ctest1~~",
          "script~~daemon:rpc:PrefixDB-Test-master1~~daemon:rpc:PrefixDB-Test~~"
        ]
      },
      "timeout_ms": 2500,
      "log": "",
      "log_metric": "microseconds",
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    },

    {
      "name": "db-stat",
      "enabled": true,
      "suspend": false,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 1000,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:db:PrefixDB-Test~~",
          "service~~daemon:db:PrefixDB-Test~~ctest1~~",
          "script~~daemon:db:PrefixDB-Test-master1~~daemon:db:PrefixDB-Test~~"
        ]
      },
      "timeout_ms": 2500,
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    },

    {
      "name": "scripts-stat",
      "enabled": true,
      "suspend": false,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 500,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:scripts:PrefixDB-Test~~",
          "service~~daemon:scripts:PrefixDB-Test~~ctest1~~",
          "script~~daemon:scripts:PrefixDB-Test-master1~~daemon:scripts:PrefixDB-Test~~"
        ]
      },
      "timeout_ms": 500,
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    },

    {
      "name": "slave-stat",
      "enabled": true,
      "suspend": false,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 100,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:slave:PrefixDB-Test~~",
          "service~~daemon:slave:PrefixDB-Test~~ctest1~~",
          "script~~daemon:slave:PrefixDB-Test-master1~~daemon:slave:PrefixDB-Test~~"
        ]
      },
      "timeout_ms": 500,
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    },

    {
      "name": "stat-sys1",
      "enabled": true,
      "suspend": false,

      "workflow": "",
      "statistics": {
        "disabled": false,
        "reduced_size": 4096,
        "step_ms": 500,
        "limit": 4096,
        "levels": 16,
        /* bytes = limit*pool  */
        "pool": 10,
        "prefixes": [
          "service~~daemon:sys:PrefixDB-Test~~",
          "service~~daemon:sys:PrefixDB-Test~~ctest1~~",
          "script~~daemon:sys:PrefixDB-Test-master1~~daemon:sys:PrefixDB-Test~~"
        ]
      },
      "timeout_ms": 500,
      /* задержка отправки первых данных (для "красивых" графиков) */
      "btp_delay_ms": 30000,
      "btp_target": "btp-gateway1"
    }
    
  ],
  
  /**/
  "system-statistics": [
    {
      "name": "system-statistics1",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "target": "stat-sys1",
        "prefix": "",
        "interval_ms": 500
      }
    }
  ],
  
  /**/
  "btp-gateway": [
    {
      "name": "btp-gateway1",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "",
      "statistics": {
        "disabled": true,
        "target": "stat-sys1",
        "interval_ms": 200,
        "handler_map": ".handler_map",
        "result_queue": ".result_queue "
      },

      "incoming_target": "",
      "outgoing_target": "client-btp1",
      "incoming_reg": false,
      "outgoing_reg": true,
      "call_lifetime_ms": 10000,
      "remove_everytime": true,
      "disable_handler_map": false,
      "remove_outdated_ms": 1000
    }
  ],

  /**/
  "server-tcp": [
    /* Основной порт*/
    {
      "name": "main-server",
      "enabled": true,
      "suspend": false,
      "startup_priority": 1000,
      "shutdown_priority": -1000,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "target": "main-stat"
      },

      "target": "main-io-statistics",
      "keep-alive": true,
      "cpu": [],
      "threads": 4,
      "addr": "0.0.0.0",
      "port": "23510",
      "backlog": 1024,
      "max_connections": 0,

      "connection": {
        "reader": {
          "sep": "\r\n",
          "bufsize": 512,
          "maxbuf": 8192,
          "minbuf": 0,
          "trimsep": true
        },
        "writer": {
          "sep": "\r\n",
          "bufsize": 4096,
          "maxbuf": 8192,
          "minbuf": 0,
          "first_as_is": true
        }
      }
    },

    /* Порт для скриптов */
    {
      "name": "script-server",
      "enabled": true,
      "suspend": false,
      "startup_priority": 1000,
      "shutdown_priority": -1000,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "target": "scripts-stat"
      },

      "target": "script-jsonrpc-statistics",
      "keep-alive": true,
      "cpu": [],
      "threads": 1,
      "addr": "0.0.0.0",
      "port": "23511",
      "backlog": 1024,
      "max_connections": 0,

      "connection": {
        "reader": {
          "sep": "\r\n",
          "bufsize": 256,
          "maxbuf": 8192,
          "minbuf": 0,
          "trimsep": true
        },
        "writer": {
          "sep": "\r\n",
          "bufsize": 512,
          "maxbuf": 8192,
          "minbuf": 0,
          "first_as_is": true
        }
      }
    },

    /* Порт для слейва */
    {
      "name": "slave-server",
      "enabled": true,
      "suspend": false,
      "startup_priority": 1000,
      "shutdown_priority": -1000,
      "workflow": "",
      "statistics": {
        "disabled": false,
        "target": "slave-stat"
      },

      "target": "slave-jsonrpc-statistics",
      "keep-alive": true,
      "cpu": [],
      "threads": 1,
      "addr": "0.0.0.0",
      "port": "23512",
      "backlog": 1024,
      "max_connections": 0,

      "connection": {
        "reader": {
          "sep": "\r\n",
          "bufsize": 256,
          "maxbuf": 8192,
          "minbuf": 0,
          "trimsep": true
        },
        "writer": {
          "sep": "\r\n",
          "bufsize": 8192,
          "maxbuf": 16384,
          "minbuf": 0,
          "first_as_is": true
        }
      }
    },

    /* raw-порт */
    {
      "name": "raw-server",
      "enabled": true,
      "target": "prefixdb1",
      "threads": 0,
      "addr": "0.0.0.0",
      "port": "23513"
    }
  ],

  /**/
  "client-tcp": [
    {
      "name": "client-btp1",
      "enabled": true,
      "suspend": false,
      "startup_priority": -500,
      "shutdown_priority": 500,
      
      "addr": "dd2",
      "port": "36000",
      "threads": 1,
      "async_connect": false,
      "reconnect_timeout_ms": 1000
    }
  ],

  /**/
  "io-queue": [
    {
      "name": "main-io-queue",
      "enabled": true,
      "suspend": true,
      "workflow": "main-io-workflow",
      "target": "main-jsonrpc-statistics",
      "callback_queue": true,
      "callback_workflow": "main-io-workflow-callback"
    }
  ],

  /**/
  "io-statistics": [
    {
      "name": "main-io-statistics",
      "enabled": true,
      "suspend": false,
      "statistics": {
        "disabled": false,
        "target": "main-stat"
      },
      "target": "main-io-queue",
      "interval_ms": 100,
      "io_name": "connections",
      "time_name": "time",
      "read_name": "read_size",
      "write_name": "write_size"
    }
  ],

  /**/
  "jsonrpc-queue": [
    {
      "name": "main-jsonrpc-queue",
      "enabled": true,
      "suspend": false,
      "startup_priority":0,
      "shutdown_priority": 0,
      "workflow": "main-jsonrpc-workflow",
      "statistics": {
        "disabled": true,
        "target": "main-stat"
      },
      "target": "main-jsonrpc-statistics-db",
      "callback_queue": true,
      "callback_workflow": "main-jsonrpc-workflow-callback"
    },
    {
      "name": "script-jsonrpc-queue",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "script-jsonrpc-workflow",
      "statistics": {
        "disabled": true,
        "target": "scripts-stat"
      },
      "target": "prefixdb-service1",
      "callback_queue": false,
      "callback_workflow": ""
    },
    {
      "name": "slave-jsonrpc-queue",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "slave-jsonrpc-workflow",
      "statistics": {
        "disabled": true,
        "target": "slave-stat"
      },
      "target": "prefixdb-service1",
      "callback_queue": false,
      "callback_workflow": ""
    }
  ],

  /**/
  "jsonrpc-statistics": [
    {
      "name": "main-jsonrpc-statistics",
      "enabled": true,
      "suspend": false,
      "statistics": {
        "disabled": false,
        "target": "rpc-stat"
      },
      "target": "main-jsonrpc-queue",
      "enable_write_size": true,
      "enable_error_stat": true,
      "time_suffix": ".time",
      "read_size_suffix": ".rsize",
      "write_size_suffix": ".wsize",
      "request_prefix": "req:",
      "notify_prefix": "ntf:",
      "other_time": "other.time",
      "other_read_size": "other.rsize",
      "other_write_size": "other.wsize"
    },
    
    {
      "name": "main-jsonrpc-statistics-db",
      "enabled": true,
      "suspend": false,
      "statistics": {
        "disabled": false,
        "target": "db-stat"
      },
      "target": "prefixdb-service1",
      
      "enable_write_size": true,
      "enable_error_stat": true,
      "time_suffix": ".time",
      "read_size_suffix": ".rsize",
      "write_size_suffix": ".wsize",
      "request_prefix": "req:",
      "notify_prefix": "ntf:",
      "other_time": "other.time",
      "other_read_size": "other.rsize",
      "other_write_size": "other.wsize"
    },
    {
      "name": "script-jsonrpc-statistics",
      "enabled": true,
      "suspend": false,
      "statistics": {
        "disabled": false,
        "target": "scripts-stat"
      },
      "target": "script-jsonrpc-queue",
      "enable_write_size": true,
      "enable_error_stat": true,
      "time_suffix": ".time",
      "read_size_suffix": ".rsize",
      "write_size_suffix": ".wsize",
      "request_prefix": "req:",
      "notify_prefix": "ntf:",
      "other_time": "other.time",
      "other_read_size": "other.rsize",
      "other_write_size": "other.wsize"
    },
    {
      "name": "slave-jsonrpc-statistics",
      "enabled": true,
      "suspend": false,
      "statistics": {
        "disabled": false,
        "target": "slave-stat"
      },
      "target": "slave-jsonrpc-queue",
      "enable_write_size": true,
      "enable_error_stat": true,
      "time_suffix": ".time",
      "read_size_suffix": ".rsize",
      "write_size_suffix": ".wsize",
      "request_prefix": "req:",
      "notify_prefix": "ntf:",
      "other_time": "other.time",
      "other_read_size": "other.rsize",
      "other_write_size": "other.wsize"
    }
  ],

  /**/
  "prefixdb": [
    {
      "name": "prefixdb1",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "prefixdb-workflow",

      "preopen": true,
      "keys_per_req": 100,
      "key_size_limit": 128,
      "value_size_limit": 10240,
      "prefix_size_limit": 256,
      "max_prefixes": 128,
      "path": "/monamour/prefixdb/master1",
      "wal_path":"",
      "detach_path": "/monamour/prefixdb/master1_detach",
      "packed_limit": 1000,
      "array_limit": 1000,
      "range_limit": 10000,
      "enable_delayed_write": true,
      "auto_repair": false,
      "abort_if_open_error": true,
      "check_merge_operations": false,
      "ini": "./rocksdb.ini",
      "compact": {       
        "enabled": true,
        "period_s": 0,
        "start_time": "02:00:00",
        "startup_compact": true
      }
    }
  ],

  /**/
  "prefixdb-service": [
    {
      "name": "prefixdb-service1",
      "enabled": true,
      "suspend": false,
      "startup_priority": 0,
      "shutdown_priority": 0,
      "workflow": "",
      "statistics": {
        "disabled": true,
        "target": "main-stat",
        "interval_ms": 1000,
        "handler_map": ".handler_map",
        "result_queue": ".result_queue "
      },
      "target": "prefixdb1",
      "allow_non_jsonrpc": true,
      "call_lifetime_ms": 60000,
      "remove_everytime": true,
      "disable_handler_map": true,
      "remove_outdated_ms": 0
    }
  ]
}
